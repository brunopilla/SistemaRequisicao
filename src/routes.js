const { Router } = require("express")
const { createUser, login, readUser, readUsers, update, updatePermissions, deleteUser } = require("./controllers/users")
const checkLoggedUser = require("./middlewares/authentication")
const isAdmin = require("./middlewares/isAdmin")
const validateReqBody = require("./middlewares/validateReqBody")
const userSchema = require("./schemas/userSchema")
const userPermissionsSchema = require("./schemas/userPermissionsSchema")
const costCenterSchema = require("./schemas/costCenterSchema")
const { createCostCenter, updateCostCenter, deleteCostCenter, readCostCenters } = require("./controllers/costCenters")
const measurementUnitSchema = require("./schemas/measurementUnitSchema")
const { createMeasurementUnit, readMeasurementUnits, updateMeasurementUnit, deleteMeasurementUnit } = require("./controllers/measurementUnits")
const routes = Router()

routes.post('/user', validateReqBody(userSchema), createUser)
routes.post('/login', login)
routes.use(checkLoggedUser)
routes.get('/user', readUser)
routes.get('/users', isAdmin, readUsers)
routes.put('/user', validateReqBody(userSchema), update)
routes.put('/user/permissions/:id', isAdmin, validateReqBody(userPermissionsSchema), updatePermissions)
routes.delete('/user/:id', isAdmin, deleteUser)

routes.post('/cost_center', validateReqBody(costCenterSchema), createCostCenter)
routes.get('/cost_centers', readCostCenters)
routes.put('/cost_center/:id', isAdmin, validateReqBody(costCenterSchema), updateCostCenter)
routes.delete('/cost_center/:id', isAdmin, deleteCostCenter)

routes.post('/measurement_unit', validateReqBody(measurementUnitSchema), createMeasurementUnit)
routes.get('/measurement_units', readMeasurementUnits)
routes.put('/measurement_unit:id', isAdmin, validateReqBody(measurementUnitSchema), updateMeasurementUnit)
routes.delete('/measurement_unit:id', isAdmin, deleteMeasurementUnit)

module.exports = routes